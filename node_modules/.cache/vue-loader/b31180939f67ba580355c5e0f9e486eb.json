{"remainingRequest":"/home/deimos/Desktop/habitica-parser/habitica-parser/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/deimos/Desktop/habitica-parser/habitica-parser/src/components/Main.vue?vue&type=template&id=54d3a52e&scoped=true","dependencies":[{"path":"/home/deimos/Desktop/habitica-parser/habitica-parser/src/components/Main.vue","mtime":1614815201522},{"path":"/home/deimos/Desktop/habitica-parser/habitica-parser/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/deimos/Desktop/habitica-parser/habitica-parser/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/deimos/Desktop/habitica-parser/habitica-parser/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/deimos/Desktop/habitica-parser/habitica-parser/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/deimos/Desktop/habitica-parser/habitica-parser/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcyA9Im1haW4iPgogICAgPGgxPkhhYml0aWNhIFBhcnNlcjwvaDE+CiAgIAogICAKICAgPGRpdiBjbGFzcz0iZm9ybSI+CiAgICAgIDxsYWJlbCBmb3I9Im5hbWUiPlVzZXIgSUQ8L2xhYmVsPgogICAgICA8aW5wdXQgdHlwZT0idGV4dCIKICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJ1c2VyLWlkIgogICAgICAgICAgICAgcmVxdWlyZWQgdi1tb2RlbD0idXNlcmlkIgogICAgICAgICAgICAgbmFtZT0idXNlci1pZCI+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJmb3JtIj4KICAgICAgPGxhYmVsIGZvcj0ibmFtZSI+VXNlciBBUEkgVG9rZW48L2xhYmVsPgogICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiCiAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0idXNlcmFwaSIKICAgICAgICAgICAgIHJlcXVpcmVkIHYtbW9kZWw9InVzZXJhcGkiCiAgICAgICAgICAgICBuYW1lPSJ1c2VyYXBpIj4KICAgIDwvZGl2PgogIDwvZGl2PgoKICA8YnV0dG9uIHYtb246Y2xpY2s9IlN1Ym1pdCI+U3VibWl0PC9idXR0b24+CgogIDxkaXYgaWQ9ImNoYXJ0Ij4KICA8L2Rpdj4KCg=="},{"version":3,"sources":["/home/deimos/Desktop/habitica-parser/habitica-parser/src/components/Main.vue"],"names":[],"mappings":"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","file":"/home/deimos/Desktop/habitica-parser/habitica-parser/src/components/Main.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class =\"main\">\n    <h1>Habitica Parser</h1>\n   \n   \n   <div class=\"form\">\n      <label for=\"name\">User ID</label>\n      <input type=\"text\"\n             class=\"form-control\" id=\"user-id\"\n             required v-model=\"userid\"\n             name=\"user-id\">\n    </div>\n\n    <div class=\"form\">\n      <label for=\"name\">User API Token</label>\n      <input type=\"password\"\n             class=\"form-control\" id=\"userapi\"\n             required v-model=\"userapi\"\n             name=\"userapi\">\n    </div>\n  </div>\n\n  <button v-on:click=\"Submit\">Submit</button>\n\n  <div id=\"chart\">\n  </div>\n\n</template>\n\n<script>\nimport http from \"../http.js\"\nimport Papa from 'papaparse'\nimport ApexCharts from 'apexcharts'\n\nexport default {\n  name: 'Main',\n  userid: \"\",\n  userapi: \"\",\n  historycsv: \"\",\n  dailies: [],\n\n  methods: {\n    Submit() {\n\n      http.get(\"\",\n              { headers:{\n                'x-client': this.userid+\"-HabiticaParser\",\n                'x-api-user': this.userid,\n                'x-api-key': this.userapi\n                }\n        })\n        .then(response =>{\n          console.log(\"Success\");\n          this.historycsv = response.data\n          this.Show();\n        })\n        .catch(err =>{\n          console.log('GET histoy.csv failed :', err);\n        });\n\n    },\n\n    Show(){\n      // Get Dailies from past 7 days, their title and Ids -->  titles[], dailyIds\n      var historyJson= Papa.parse(this.historycsv,{ delimiter: ',', skipEmptyLines: true }).data;\n      var i;\n      var dailies=[];\n      var dailyIDs=[];\n      var titles=[];\n      for(i = 1; i < historyJson.length; i++){\n        var date = new Date(historyJson[i][3]);\n        if ( historyJson[i][2] == \"daily\"\n            && date > this.pastWeek() ){\n          var daily = historyJson[i];\n          dailies.push(daily);\n          if(dailyIDs.indexOf(daily[1]) == -1){ //If daily's ID not in the list of IDs\n            dailyIDs.push(daily[1]);\n            titles.push(daily[0])\n          }\n        }\n      } \n\n      // Get values of dailies --> values[]\n      var weekDays = this.pastDays();\n      var allValues=[]\n      for (let d in dailyIDs){ // for each different daily IDs\n        var values=[];\n        for(let k in weekDays ){ // for each day of the past week\n          for(let e in dailies){ // for each entry in dailies\n            date = new Date(dailies[e][3]);\n            if( dailies[e][1] == dailyIDs[d]  \n                && this.sameDay(date,weekDays[k]) ){\n                  values.push(Math.round(parseFloat(dailies[e][4])));\n            }\n          }\n        }\n        \n        if(values.length > 0){\n          allValues.push(values);\n          console.log(values)\n        }\n      }\n\n      // Gather relevant info for drawing chart\n      var series=[];\n      for(let d in dailyIDs){\n        var entry={\n          name: titles[d],\n          data: allValues[d]\n        }\n        series.push(entry);\n      }\n\n      var categories=[];\n      for(let k in weekDays){\n        categories.push(this.formatDate(weekDays[k]));\n      }\n\n      var options = {\n        plotOptions: {\n          heatmap: {\n            colorScale: {\n              ranges: [{\n                from: -50,\n                to: -17,\n                color: '#c11916',\n                name: 'extremely low',\n              },\n              {\n                from: -16,\n                to: -9,\n                color: '#ed683c',\n                name: 'very low',\n              },\n              {\n                from: -8,\n                to: -2,\n                color: '#f3903f',\n                name: 'low',\n              },\n              {\n                from: -1,\n                to: 1,\n                color: '#fff33b',\n                name: 'medium',\n              },\n              {\n                from: 2,\n                to: 5,\n                color: '#1bf118',\n                name: 'high',\n              },\n              {\n                from: 6,\n                to: 11,\n                color: '#31db92',\n                name: 'very high',\n              },\n              {\n                from: 12,\n                to: 30,\n                color: '#1c6ff8',\n                name: 'extremely high',\n              }]\n            }\n          }\n        },\n\n        series: series,\n        xaxis:{\n          categories,\n        },\n        chart: {\n          height: 450,\n          type: 'heatmap',\n        },\n        dataLabels: {\n          enabled: false\n        },\n        colors: [\"#808080\"],\n        title: {\n          text: 'Dailies of past 7 days'\n        },\n      }\n\n      var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n      chart.render();\n\n    },\n    \n\n\n    // Utility Functions\n    \n    pastDays(){\n      // Return the 7 past days\n      var pastDays= [];\n      var i;\n\n      for(i = 1; i < 8 ; i++){\n        var date= new Date();\n        var pastDate = date.getDate() - i;\n        date.setDate(pastDate);\n        pastDays.push(date);\n      }\n      return pastDays;\n    },\n\n    pastWeek(){\n      // return the date 7 days prior\n      var ourDate = new Date();\n\n      //Change it so that it is 7 days in the past.\n      var pastDate = ourDate.getDate() - 7;\n      ourDate.setDate(pastDate);\n      return ourDate;\n    },\n\n    sameDay(d1, d2) {\n      return d1.getFullYear() === d2.getFullYear() &&\n        d1.getMonth() === d2.getMonth() &&\n        d1.getDate() === d2.getDate();\n    },\n    formatDate(date){\n      const months = [\"Jan\", \"Feb\", \"Mar\",\"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      let formatted_date = date.getDate() + \"-\" + months[date.getMonth()] + \"-\" + date.getFullYear()\n      return formatted_date;\n    },\n  }\n}\n\n    \n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.main{\n  padding: 0.5em\n}\nlabel{\n  padding: 1em\n}\n.form{\n  padding: 0.2em\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}